{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Shriram/hackathon/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from'react';import{useMemo}from'react';export var DOTS='...';var range=function range(start,end){var length=end-start+1;return Array.from({length:length},function(_,idx){return idx+start;});};export var usePagination=function usePagination(_ref){var totalCount=_ref.totalCount,pageSize=_ref.pageSize,_ref$siblingCount=_ref.siblingCount,siblingCount=_ref$siblingCount===void 0?1:_ref$siblingCount,currentPage=_ref.currentPage;var paginationRange=useMemo(function(){var totalPageCount=Math.ceil(totalCount/pageSize);// Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\nvar totalPageNumbers=siblingCount+5;/*\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */if(totalPageNumbers>=totalPageCount){return range(1,totalPageCount);}var leftSiblingIndex=Math.max(currentPage-siblingCount,1);var rightSiblingIndex=Math.min(currentPage+siblingCount,totalPageCount);/*\r\n          We do not want to show dots if there is only one position left \r\n          after/before the left/right page count as that would lead to a change if our Pagination\r\n          component size which we do not want\r\n        */var shouldShowLeftDots=leftSiblingIndex>2;var shouldShowRightDots=rightSiblingIndex<totalPageCount-2;var firstPageIndex=1;var lastPageIndex=totalPageCount;if(!shouldShowLeftDots&&shouldShowRightDots){var leftItemCount=3+2*siblingCount;var leftRange=range(1,leftItemCount);return[].concat(_toConsumableArray(leftRange),[DOTS,totalPageCount]);}if(shouldShowLeftDots&&!shouldShowRightDots){var rightItemCount=3+2*siblingCount;var rightRange=range(totalPageCount-rightItemCount+1,totalPageCount);return[firstPageIndex,DOTS].concat(_toConsumableArray(rightRange));}if(shouldShowLeftDots&&shouldShowRightDots){var middleRange=range(leftSiblingIndex,rightSiblingIndex);return[firstPageIndex,DOTS].concat(_toConsumableArray(middleRange),[DOTS,lastPageIndex]);}},[totalCount,pageSize,siblingCount,currentPage]);return paginationRange;};","map":{"version":3,"names":["React","useMemo","DOTS","range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","paginationRange","totalPageCount","Math","ceil","totalPageNumbers","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","leftRange","rightItemCount","rightRange","middleRange"],"sources":["C:/Users/Shriram/hackathon/src/comp/UsePagination.js"],"sourcesContent":["import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage\r\n}) => {\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        /*\r\n          If the number of pages is less than the page numbers we want to show in our\r\n          paginationComponent, we return the range [1..totalPageCount]\r\n        */\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        /*\r\n          We do not want to show dots if there is only one position left \r\n          after/before the left/right page count as that would lead to a change if our Pagination\r\n          component size which we do not want\r\n        */\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};\r\n"],"mappings":"wHAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,MAAO,IAAMC,KAAI,CAAG,KAAb,CAEP,GAAMC,MAAK,CAAG,QAARA,MAAQ,CAACC,KAAD,CAAQC,GAAR,CAAgB,CAC1B,GAAIC,OAAM,CAAGD,GAAG,CAAGD,KAAN,CAAc,CAA3B,CACA,MAAOG,MAAK,CAACC,IAAN,CAAW,CAAEF,MAAM,CAANA,MAAF,CAAX,CAAuB,SAACG,CAAD,CAAIC,GAAJ,QAAYA,IAAG,CAAGN,KAAlB,EAAvB,CAAP,CACH,CAHD,CAKA,MAAO,IAAMO,cAAa,CAAG,QAAhBA,cAAgB,MAKvB,IAJFC,WAIE,MAJFA,UAIE,CAHFC,QAGE,MAHFA,QAGE,wBAFFC,YAEE,CAFFA,YAEE,4BAFa,CAEb,mBADFC,WACE,MADFA,WACE,CACF,GAAMC,gBAAe,CAAGf,OAAO,CAAC,UAAM,CAClC,GAAMgB,eAAc,CAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,CAAGC,QAAvB,CAAvB,CAEA;AACA,GAAMO,iBAAgB,CAAGN,YAAY,CAAG,CAAxC,CAEA;AACR;AACA;AACA,UACQ,GAAIM,gBAAgB,EAAIH,cAAxB,CAAwC,CACpC,MAAOd,MAAK,CAAC,CAAD,CAAIc,cAAJ,CAAZ,CACH,CAED,GAAMI,iBAAgB,CAAGH,IAAI,CAACI,GAAL,CAASP,WAAW,CAAGD,YAAvB,CAAqC,CAArC,CAAzB,CACA,GAAMS,kBAAiB,CAAGL,IAAI,CAACM,GAAL,CACtBT,WAAW,CAAGD,YADQ,CAEtBG,cAFsB,CAA1B,CAKA;AACR;AACA;AACA;AACA,UACQ,GAAMQ,mBAAkB,CAAGJ,gBAAgB,CAAG,CAA9C,CACA,GAAMK,oBAAmB,CAAGH,iBAAiB,CAAGN,cAAc,CAAG,CAAjE,CAEA,GAAMU,eAAc,CAAG,CAAvB,CACA,GAAMC,cAAa,CAAGX,cAAtB,CAEA,GAAI,CAACQ,kBAAD,EAAuBC,mBAA3B,CAAgD,CAC5C,GAAIG,cAAa,CAAG,EAAI,EAAIf,YAA5B,CACA,GAAIgB,UAAS,CAAG3B,KAAK,CAAC,CAAD,CAAI0B,aAAJ,CAArB,CAEA,mCAAWC,SAAX,GAAsB5B,IAAtB,CAA4Be,cAA5B,GACH,CAED,GAAIQ,kBAAkB,EAAI,CAACC,mBAA3B,CAAgD,CAC5C,GAAIK,eAAc,CAAG,EAAI,EAAIjB,YAA7B,CACA,GAAIkB,WAAU,CAAG7B,KAAK,CAClBc,cAAc,CAAGc,cAAjB,CAAkC,CADhB,CAElBd,cAFkB,CAAtB,CAIA,OAAQU,cAAR,CAAwBzB,IAAxB,4BAAiC8B,UAAjC,GACH,CAED,GAAIP,kBAAkB,EAAIC,mBAA1B,CAA+C,CAC3C,GAAIO,YAAW,CAAG9B,KAAK,CAACkB,gBAAD,CAAmBE,iBAAnB,CAAvB,CACA,OAAQI,cAAR,CAAwBzB,IAAxB,4BAAiC+B,WAAjC,GAA8C/B,IAA9C,CAAoD0B,aAApD,GACH,CACJ,CAnD8B,CAmD5B,CAAChB,UAAD,CAAaC,QAAb,CAAuBC,YAAvB,CAAqCC,WAArC,CAnD4B,CAA/B,CAqDA,MAAOC,gBAAP,CACH,CA5DM"},"metadata":{},"sourceType":"module"}